I"y<h3 id="the-wise-man-in-vue">The Wise Man in Vue</h3>
<p>Built the wise-man from scratch in Vue. It’s supposed to give one-worded answers for questions regarding two seemingly conflicting/opposing ideas or attributes.
<img src="/assets/images/blog12/uncle.PNG" /></p>

<p>A couple of things I learned:</p>

<p>1.) Environment variables are put in .env files and will need to restart the server for it to update.<br />
2.) Parents can only catch events from child componenets WITHIN the child components 
(e.g. If I $emit an event from a Footer component, I can’t catch it in a random div component.)<br />
3.) Making API calls to openai and then parsing the text from the results wasn’t that hard. <br />
4.) I used the created life cycle hook to initialize the openai object with the api_key env variable. (using the openai client module from github)</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">OpenAI</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">openai-api</span><span class="dl">'</span><span class="p">);</span>

<span class="c1">// Load your key from an environment variable or secret management service</span>
<span class="c1">// (do not include your key directly in your code)</span>
<span class="kd">const</span> <span class="nx">OPENAI_API_KEY</span> <span class="o">=</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">OPENAI_API_KEY</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">openai</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">OpenAI</span><span class="p">(</span><span class="nx">OPENAI_API_KEY</span><span class="p">);</span>
</code></pre></div></div>
:ET